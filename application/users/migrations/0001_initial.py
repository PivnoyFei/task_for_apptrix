# Generated by Django 4.2.2 on 2023-06-30 16:24

import core.fields
import core.models
import core.validators
from django.db import migrations, models
import users.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('first_name', models.CharField(max_length=256, verbose_name='имя')),
                ('last_name', models.CharField(max_length=256, verbose_name='фамилия')),
                ('gender', models.CharField(choices=[('m', 'Мужчина'), ('f', 'Женщина')], max_length=1, verbose_name='Пол')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='почтовый адрес')),
                ('_image', core.fields.WEBPField(blank=True, null=True, upload_to=users.models.get_upload_path, validators=[core.validators.validate_image], verbose_name='аватарка')),
                ('is_staff', models.BooleanField(default=False, help_text='доступно редактирование некоторых материалов на сайте.', verbose_name='редактор')),
                ('is_superuser', models.BooleanField(default=False, help_text='делегирует полный обьем прав.', verbose_name='администратор')),
                ('is_active', models.BooleanField(default=True, help_text='активация/деактивация учетной записи.', verbose_name='активная учетная запись')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'пользователь',
                'verbose_name_plural': 'пользователи',
            },
            bases=(models.Model, core.models.ThumbnailMixin),
        ),
    ]
